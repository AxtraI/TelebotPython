import psycopg2
import telebot
import requests
from bs4 import BeautifulSoup
from telebot import types

TOKEN="7096609931:AAGQeafGTfhz8H1266pH0sKP2P3YimTz_8k"
bot=telebot.TeleBot(TOKEN)
url = "http://sr.isu.ru/"

@bot.message_handler(commands=['start'])
def start(message):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.send_message(message.chat.id,"–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –±–æ—Ç –§–ë–ö–ò –ò–ì–£üòâ,–ø–æ–∫–∞ —á—Ç–æ —è —É–º–µ—é –Ω–µ–º–Ω–æ–≥–æ,–Ω–æ —è –±—ã—Å—Ç—Ä–æ —É—á—É—Å—å –∏ —Å–∫–æ—Ä–æ —Å—Ç–∞–Ω—É —Ç–≤–æ–∏–º –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º –ø–æ–º–æ—à–Ω–∏–∫–æ–º!–ü–æ–∫–∞ —á—Ç–æ —è –º–æ–≥—É —Ç–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –∞ —Ç–∞–∫ –∂–µ —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —É –º–µ–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –Ω–∞—à–µ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞–≤ –Ω–∞–ø—Ä–∏–º–µ—Ä:–¥–µ–∫–∞–Ω.")
    keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True)
    keyboard.row('–ü–æ–ª—É—á–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è')

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.send_message(message.chat.id, "–¢–∞–∫ –∂–µ —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup=keyboard)

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
    bot.register_next_step_handler(message, get_events)


@bot.message_handler(content_types=['text'])
def findEmployee(message):
    if (message.text==">"):
        pass
    else:
        con = psycopg2.connect(database='EmployeeDB', user='postgres', password='5055dom', host='localhost',
                               port='5432')
        cursor = con.cursor()

        message1 = message.text
        print(message1)
        likepattern = f"%{message1}%"

        # Use parameterized query to avoid SQL injection and string formatting issues
        cursor.execute("SELECT fio, job, email, phonenumber FROM employee WHERE job ILIKE %s", (likepattern,))

        container = cursor.fetchall()
        cursor.close()
        con.close()

        answer = ""
        for l in container:
            answer += f'–§–ò–û: {l[0]} \n –î–æ–ª–∂–Ω–æ—Å—Ç—å: {l[1]} \n –¢–µ–ª–µ—Ñ–æ–Ω:{l[3]} \n –ü–æ—á—Ç–∞:{l[2]}'
            if len(answer) > 0:
                bot.send_message(message.chat.id, text=answer)
                answer=""


PARSE_STATE = 1


def get_events(message):
    if message.text == '–ü–æ–ª—É—á–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è':
        url = 'http://sr.isu.ru/'
        events = parse_events_from_url(url)

        if events:
            for event in events:
                response = f"–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {event['title']}\n–î–∞—Ç–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {event['date']}"
                bot.send_message(message.chat.id, response)

        # –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
       # hide_keyboard = telebot.types.ReplyKeyboardRemove()
       # bot.send_message(message.chat.id,reply_markup=hide_keyboard)

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
        bot.register_next_step_handler(message, start)

def parse_events_from_url(url):
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.content, 'html.parser')
        event_titles = soup.find_all('h4', class_='tribe-event-title')
        event_dates = soup.find_all('span', class_='tribe-event-date-start')
        if len(event_titles) == len(event_dates):
            events_data = []
            for title, date in zip(event_titles, event_dates):
                event_title = title.text.strip()
                event_date = date.text.strip()
                events_data.append({'title': event_title, 'date': event_date})
            return events_data
        else:
            print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ –¥–∞—Ç —Å–æ–±—ã—Ç–∏–π –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç")
    else:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:", response.status_code)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    bot.polling()