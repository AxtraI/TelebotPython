import telebot
import requests
from bs4 import BeautifulSoup
import psycopg2
from telebot import types

TOKEN = '7096609931:AAGQeafGTfhz8H1266pH0sKP2P3YimTz_8k'
bot = telebot.TeleBot(TOKEN)
url = "http://sr.isu.ru/"
YANDEX_MAPS_API_KEY = 'cff25af7-4b9b-4d9f-b60a-ab0a3c110d9c'
ROUTE_URL = 'https://api.routing.yandex.net/v2/route'
YANDEX_MAPS_URL = 'https://yandex.ru/maps/?ll={lon},{lat}&z=14'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
def parse_events_from_url(url):
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.content, 'html.parser')
        event_titles = soup.find_all('h4', class_='tribe-event-title')
        event_dates = soup.find_all('span', class_='tribe-event-date-start')
        if len(event_titles) == len(event_dates):
            events_data = []
            for title, date in zip(event_titles, event_dates):
                event_title = title.text.strip()
                event_date = date.text.strip()
                events_data.append({'title': event_title, 'date': event_date})
            return events_data
        else:
            print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ –¥–∞—Ç —Å–æ–±—ã—Ç–∏–π –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç")
    else:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:", response.status_code)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
@bot.message_handler(func=lambda message: message.text == '–ü–æ–ª—É—á–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—èüìÖ')
def get_events(message):
    events = parse_events_from_url(url)

    if events:
        for event in events:
            response = f"–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {event['title']}\n–î–∞—Ç–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {event['date']}"
            bot.send_message(message.chat.id, response)

# –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –±–æ—Ç–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
@bot.message_handler(commands=['start'])
def start(message):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add('–ü–æ–ª—É—á–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—èüìÖ')
    keyboard.add('–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞ –∫–∞—Ä—Ç–µüó∫Ô∏è')
    keyboard.add('FAQ‚ùì')
    keyboard.add('–ü—Ä–æ–π—Ç–∏ –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Çüéì')

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)


#–í–û–ü–†–û–°–ù–ò–ö----------------------------------------
@bot.message_handler(func=lambda message: message.text == '–ü—Ä–æ–π—Ç–∏ –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Çüéì')
def start_test(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button1 = types.KeyboardButton('–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–µ')
    button2 = types.KeyboardButton('–¢–æ—á–Ω—ã–µ')
    button3 = types.KeyboardButton('–ò—Å–∫—É—Å—Å—Ç–≤–æ –∏ –¥–∏–∑–∞–π–Ω')
    keyboard.add(button1, button2, button3)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—É—é –æ–±–ª–∞—Å—Ç—å:", reply_markup=keyboard)
    bot.register_next_step_handler(message, question1)

def question1(message):
    answer = message.text.lower()
    if answer == '–≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–µ':
        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button1 = types.KeyboardButton('–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è')
        button2 = types.KeyboardButton('–¢–≤–æ—Ä—á–µ—Å–∫–∞—è')
        keyboard.add(button1, button2)

        bot.send_message(message.chat.id, "–ö–∞–∫—É—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å?", reply_markup=keyboard)
        bot.register_next_step_handler(message, question2)
    elif answer == '—Ç–æ—á–Ω—ã–µ':
        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button1 = types.KeyboardButton('–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è')
        button2 = types.KeyboardButton('–¢–≤–æ—Ä—á–µ—Å–∫–∞—è')
        keyboard.add(button1, button2)

        bot.send_message(message.chat.id, "–ö–∞–∫—É—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å?", reply_markup=keyboard)
        bot.register_next_step_handler(message, question2)
    elif answer == '–∏—Å–∫—É—Å—Å—Ç–≤–æ –∏ –¥–∏–∑–∞–π–Ω':
        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button1 = types.KeyboardButton('–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è')
        button2 = types.KeyboardButton('–¢–≤–æ—Ä—á–µ—Å–∫–∞—è')
        keyboard.add(button1, button2)

        bot.send_message(message.chat.id, "–ö–∞–∫—É—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å?", reply_markup=keyboard)
        bot.register_next_step_handler(message, question2)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞.")
        bot.register_next_step_handler(message, question1)

def question2(message):
    answer = message.text.lower()
    if answer in ['–∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è', '—Ç–≤–æ—Ä—á–µ—Å–∫–∞—è']:
        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button1 = types.KeyboardButton('–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –∏–¥–µ–π')
        button2 = types.KeyboardButton('–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑–∞')
        keyboard.add(button1, button2)

        bot.send_message(message.chat.id, "–ß—Ç–æ —Ç—ã —Å—á–∏—Ç–∞–µ—à—å –≤–∞–∂–Ω—ã–º –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏?", reply_markup=keyboard)
        bot.register_next_step_handler(message, question3)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞.")
        bot.register_next_step_handler(message, question2)

def question3(message):
    answer = message.text.lower()
    if answer in ['–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –∏–¥–µ–π', '–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑–∞']:
        bot.send_message(message.chat.id,
                         "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞! –ü–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–∞–º –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ '–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –¥–∏–∑–∞–π–Ω'.")
        start(message)  # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ /start
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞.")
        bot.register_next_step_handler(message, question3)

#–í–û–ü–†–û–°–ù–ò–ö----------------------------------------


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ FAQ

@bot.message_handler(func=lambda message: message.text == 'FAQ‚ùì')
def faq(message):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è FAQ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    faq_keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True)
    faq_keyboard.row('–ü–µ—Ä–µ—á–µ–Ω—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤', '–°—Ä–æ–∫–∏ –ø–æ–¥–∞—á–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤')
    faq_keyboard.row('–°—Ä–æ–∫–∏ –ø—Ä–∏–µ–º–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏', '–ü—Ä–∏–∫–∞–∑—ã –Ω–∞ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ')
    faq_keyboard.row('–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è', '–ò–Ω–æ–≥–æ—Ä–æ–¥–Ω–∏–º')
    faq_keyboard.row('–û–±—â–µ–∂–∏—Ç–∏–µ', '–ù–∞–∑–∞–¥')

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π FAQ
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª FAQ:", reply_markup=faq_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ —Ä–∞–∑–¥–µ–ª–µ FAQ
@bot.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥')
def back_to_start(message):
    start(message)
@bot.message_handler(func=lambda message: message.text == '–ü–µ—Ä–µ—á–µ–Ω—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤')
def document_list(message):
    documents = [
        "–£–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏",
        "–î–æ–∫—É–º–µ–Ω—Ç –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏",
        "–°—Ç—Ä–∞—Ö–æ–≤–æ–π –Ω–æ–º–µ—Ä –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –ª–∏—Ü–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞ (–°–ù–ò–õ–°)",
        "–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ",
        "–°–æ–≥–ª–∞—Å–∏–µ –∑–∞–∫–æ–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è —Å—É–±—ä–µ–∫—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (—Å—É–±—ä–µ–∫—Ç–∞) –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–º –≤–∏–¥–µ –ø–æ –æ—Ç–∫—Ä—ã—Ç—ã–º –∫–∞–Ω–∞–ª–∞–º —Å–µ—Ç–∏ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç",
        "–°–æ–≥–ª–∞—Å–∏–µ –ø–æ—Å—Ç—É–ø–∞—é—â–µ–≥–æ –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–º –≤–∏–¥–µ –ø–æ –æ—Ç–∫—Ä—ã—Ç—ã–º –∫–∞–Ω–∞–ª–∞–º —Å–µ—Ç–∏ –ò–Ω—Ç–µ—Ä–Ω–µ"
    ]

    formatted_documents = "\n".join([f"{i + 1}. {doc}" for i, doc in enumerate(documents)])
    bot.send_message(message.chat.id, f"–ü–µ—Ä–µ—á–µ–Ω—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:\n{formatted_documents}")

@bot.message_handler(func=lambda message: message.text == '–°—Ä–æ–∫–∏ –ø–æ–¥–∞—á–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤')
def document_deadlines(message):
    response = (
        "–ü—Ä–∏–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å <b>20 –∏—é–Ω—è 2024 –≥–æ–¥–∞</b>:\n\n"
        "–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç (–æ—á–Ω–∞—è, –æ—á–Ω–æ-–∑–∞–æ—á–Ω–∞—è –∏ –∑–∞–æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è):\n"
        "- –Ω–∞ –±—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ï–ì–≠: ‚Äì <b>–ø–æ 25 –∏—é–ª—è</b>;\n"
        "- –Ω–∞ –±—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π ‚Äì <b>–ø–æ 10 –∏—é–ª—è</b>;\n"
        "- –Ω–∞ –ø–ª–∞—Ç–Ω—ã–µ –º–µ—Å—Ç–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ï–ì–≠ ‚Äì <b>–ø–æ 19 –∞–≤–≥—É—Å—Ç–∞</b>;\n"
        "- –Ω–∞ –ø–ª–∞—Ç–Ω—ã–µ –º–µ—Å—Ç–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π ‚Äì <b>–ø–æ 19 –∞–≤–≥—É—Å—Ç–∞</b>;\n\n"
        "–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞:\n"
        "- –Ω–∞ –±—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞, –æ—á–Ω–æ–µ, –æ—á–Ω–æ-–∑–∞–æ—á–Ω–æ–µ ‚Äì <b>–ø–æ 16 –∞–≤–≥—É—Å—Ç–∞</b>;\n"
        "- –Ω–∞ –ø–ª–∞—Ç–Ω—ã–µ –º–µ—Å—Ç–∞, –æ—á–Ω–æ–µ, –æ—á–Ω–æ-–∑–∞–æ—á–Ω–æ–µ ‚Äì <b>–ø–æ 28 –∞–≤–≥—É—Å—Ç–∞</b>;\n"
        "- –Ω–∞ –±—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞, –∑–∞–æ—á–Ω–æ–µ ‚Äì <b>–ø–æ 23 –∞–≤–≥—É—Å—Ç–∞</b>;\n"
        "- –Ω–∞ –ø–ª–∞—Ç–Ω—ã–µ –º–µ—Å—Ç–∞, –∑–∞–æ—á–Ω–æ–µ, - <b>–Ω–µ –ø–æ–∑–¥–Ω–µ–µ, —á–µ–º –∑–∞ 3 –¥–Ω—è –¥–æ –Ω–∞—á–∞–ª–∞ —É—á–µ–±–Ω–æ–≥–æ –≥–æ–¥–∞</b> "
        "(–°—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–∏–µ–º–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–º —É—á–µ–±–Ω—ã–º –≥—Ä–∞—Ñ–∏–∫–æ–º)."
    )

    bot.send_message(message.chat.id, response, parse_mode='HTML')

@bot.message_handler(func=lambda message: message.text == '–°—Ä–æ–∫–∏ –ø—Ä–∏–µ–º–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏')
def original_document_deadlines(message):
    response = (
        "<b>–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç:</b>\n"
        "3 –∞–≤–≥—É—Å—Ç–∞ 2024 –≥–æ–¥–∞ –¥–æ 17:00 –ø–æ –∏—Ä–∫—É—Ç—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –ø—Ä–∏–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –æ—Ç –ª–∏—Ü, –≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö –≤ —Å–ø–∏—Å–∫–∏ –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö, –∂–µ–ª–∞—é—â–∏—Ö –±—ã—Ç—å –∑–∞—á–∏—Å–ª–µ–Ω–Ω—ã–º–∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã–µ –±—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞;\n\n"
        "<b>–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞:</b>\n"
        "- 22 –∞–≤–≥—É—Å—Ç–∞ 2024 –≥–æ–¥–∞ –¥–æ 17:00 –ø–æ –∏—Ä–∫—É—Ç—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ - –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –ø—Ä–∏–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –æ—Ç –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö –Ω–∞ –º–µ—Å—Ç–∞ –≤ —Ä–∞–º–∫–∞—Ö –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö —Ü–∏—Ñ—Ä (–±—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞) –ø–æ –æ—á–Ω–æ–π, –æ—á–Ω–æ-–∑–∞–æ—á–Ω–æ–π, –Ω–∞–±—Ä–∞–≤—à–∏–µ –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤."
    )

    bot.send_message(message.chat.id, response, parse_mode='HTML')

@bot.message_handler(func=lambda message: message.text == '–ü—Ä–∏–∫–∞–∑—ã –Ω–∞ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ')
def admission_orders(message):
    response = (
        "<b>–ü—Ä–∏–∫–∞–∑—ã –Ω–∞ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ:</b>\n\n"
        "<b>–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç:</b>\n"
        "- <b>30 –∏—é–ª—è</b> - –Ω–∞ –º–µ—Å—Ç–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Å–æ–±–æ–π, —Ü–µ–ª–µ–≤–æ–π –∏ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–≤–æ—Ç.\n"
        "- <b>06 –∞–≤–≥—É—Å—Ç–∞</b> ‚Äì –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã–µ –±—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞;\n"
        "- <b>31 –∞–≤–≥—É—Å—Ç–∞</b> ‚Äì –Ω–∞ –ø–ª–∞—Ç–Ω—ã–µ –º–µ—Å—Ç–∞;\n\n"
        "<b>–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞:</b>\n"
        "- <b>23 –∞–≤–≥—É—Å—Ç–∞</b> ‚Äì –Ω–∞ –±—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞, –æ—á–Ω–æ–µ, –æ—á–Ω–æ-–∑–∞–æ—á–Ω–æ–µ;\n"
        "- <b>31 –∞–≤–≥—É—Å—Ç–∞</b> ‚Äì –Ω–∞ –ø–ª–∞—Ç–Ω—ã–µ –º–µ—Å—Ç–∞, –æ—á–Ω–æ–µ, –æ—á–Ω–æ-–∑–∞–æ—á–Ω–æ–µ;\n"
        "- <b>29 –∞–≤–≥—É—Å—Ç–∞</b> ‚Äì –Ω–∞ –±—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞, –∑–∞–æ—á–Ω–æ–µ;\n"
        "- <b>31 –∞–≤–≥—É—Å—Ç–∞</b> ‚Äì –Ω–∞ –ø–ª–∞—Ç–Ω—ã–µ –º–µ—Å—Ç–∞, –∑–∞–æ—á–Ω–æ–µ."
    )

    bot.send_message(message.chat.id, response, parse_mode='HTML')

@bot.message_handler(func=lambda message: message.text == '–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è')
def entrance_exams(message):
    response = (
        "<b>–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è:</b>\n\n"
        "<b>–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç:</b>\n"
        "<b>–î–ª—è –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö –Ω–∞ –±–∞–∑–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –æ–±—â–µ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:</b>\n"
        "–ü—Ä–∏–µ–º –Ω–∞ –≤—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ–¥–µ—Ç—Å—è –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ï–¥–∏–Ω–æ–≥–æ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≠–∫–∑–∞–º–µ–Ω–∞ (–ï–ì–≠):\n"
        "- –ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞: –†—É—Å—Å–∫–∏–π —è–∑—ã–∫, –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞, –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –ò–ö–¢ –∏–ª–∏ –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –∏–ª–∏ –§–∏–∑–∏–∫–∞ –∏–ª–∏ –•–∏–º–∏—è\n"
        "- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º: –†—É—Å—Å–∫–∏–π —è–∑—ã–∫, –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞, –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ –∏–ª–∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –ò–ö–¢ –∏–ª–∏ –ò—Å—Ç–æ—Ä–∏—è –∏–ª–∏ –ì–µ–æ–≥—Ä–∞—Ñ–∏—è\n"
        "- –°–µ—Ä–≤–∏—Å: –†—É—Å—Å–∫–∏–π —è–∑—ã–∫, –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞, –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ –∏–ª–∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –ò–ö–¢ –∏–ª–∏ –ò—Å—Ç–æ—Ä–∏—è –∏–ª–∏ –ì–µ–æ–≥—Ä–∞—Ñ–∏—è\n"
        "- –†–µ–∫–ª–∞–º–∞ –∏ —Å–≤—è–∑–∏ —Å –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é: –†—É—Å—Å–∫–∏–π —è–∑—ã–∫, –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ, –ò—Å—Ç–æ—Ä–∏—è –∏–ª–∏ –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –∏–ª–∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –ò–ö–¢\n"
        "- –¢—É—Ä–∏–∑–º: –†—É—Å—Å–∫–∏–π —è–∑—ã–∫, –ò—Å—Ç–æ—Ä–∏—è, –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ –∏–ª–∏ –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –∏–ª–∏ –ì–µ–æ–≥—Ä–∞—Ñ–∏—è\n"
        "- –ì–æ—Å—Ç–∏–Ω–∏—á–Ω–æ–µ –¥–µ–ª–æ: –†—É—Å—Å–∫–∏–π —è–∑—ã–∫, –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ, –ò—Å—Ç–æ—Ä–∏—è –∏–ª–∏ –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫\n\n"
        "<b>–î–ª—è –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö –Ω–∞ –±–∞–∑–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:</b>\n"
        "–ü—Ä–∏–µ–º –Ω–∞ –≤—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ–¥–µ—Ç—Å—è –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π.\n\n"
        "<b>–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞:</b>\n"
        "–ü—Ä–∏–µ–º –Ω–∞ –≤—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã –≤–µ–¥–µ—Ç—Å—è –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø–∏—Å—å–º–µ–Ω–Ω–æ–≥–æ –º–µ–∂–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é."
    )

    bot.send_message(message.chat.id, response, parse_mode='HTML')

@bot.message_handler(func=lambda message: message.text == '–ò–Ω–æ–≥–æ—Ä–æ–¥–Ω–∏–º')
def out_of_town(message):
    response = (
        "<b>–ò–Ω–æ–≥–æ—Ä–æ–¥–Ω–∏–º:</b>\n\n"
        "–ù–∞ –≤—Ä–µ–º—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤—ã–¥–µ–ª—è–µ—Ç—Å—è –ª–∏—à—å –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏.\n"
        "–í–æ –≤—Ä–µ–º—è —É—á–µ–±—ã –æ–±—â–µ–∂–∏—Ç–∏–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤—Å–µ–º –Ω—É–∂–¥–∞—é—â–∏–º—Å—è."
    )

    bot.send_message(message.chat.id, response, parse_mode='HTML')

@bot.message_handler(func=lambda message: message.text == '–û–±—â–µ–∂–∏—Ç–∏–µ')
def dormitory(message):
    response = (
        "<b>–û–±—â–µ–∂–∏—Ç–∏–µ:</b>\n\n"
        "<b>–®–∞–≥ 1:</b> –û—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –º–µ—Å—Ç–∞ –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏ –ø–æ—Å–ª–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –ø—Ä–∏—ë–º–Ω—É—é –∫–æ–º–∏—Å—Å–∏—é. –û–±—Ä–∞–∑–µ—Ü –∑–∞—è–≤–ª–µ–Ω–∏—è —Ä–∞–∑–º–µ—â–µ–Ω –Ω–∞ <a href='https://isu.ru/ru/about/facilities/hospices/index.html'>—Å–∞–π—Ç–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞</a>.\n\n"
        "–ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø–æ–ª—å–∑—É—é—â–µ–π—Å—è –ª—å–≥–æ—Ç–∞–º–∏ –ø—Ä–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –º–µ—Å—Ç –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –µ—ë –∏ –ø—Ä–∏–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ –∫ –∑–∞—è–≤–ª–µ–Ω–∏—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã. –ü–µ—Ä–µ—á–µ–Ω—å –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –ø–æ–ª—å–∑—É—é—â–∏—Ö—Å—è –ª—å–≥–æ—Ç–∞–º–∏ –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑–º–µ—â–µ–Ω –∑–¥–µ—Å—å.\n\n"
        "<b>–í–Ω–∏–º–∞–Ω–∏–µ!</b> –ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –º–µ—Å—Ç–∞ –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏ –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ –ª—å–≥–æ—Ç—É, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –Ω–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç/–≤ –∏–Ω—Å—Ç–∏—Ç—É—Ç –¥–æ 19 –∞–≤–≥—É—Å—Ç–∞.\n\n"
        "<b>–®–∞–≥ 2:</b> –ù–∞—á–∏–Ω–∞—è —Å 24 –∞–≤–≥—É—Å—Ç–∞, –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –º–µ—Å—Ç–∞ –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏ –≤ –¥–µ–∫–∞–Ω–∞—Ç–µ, –Ω–∞ —Å–∞–π—Ç–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.\n\n"
        "<b>–®–∞–≥ 3:</b> –î–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ –Ω–∞–π–º–∞ –∂–∏–ª–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è –≤ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏—Ö –æ–±—â–µ–∂–∏—Ç–∏—è—Ö –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ü–æ–ª–æ–∂–µ–Ω–∏–µ–º –æ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏—Ö –æ–±—â–µ–∂–∏—Ç–∏—è—Ö —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏ –≤–Ω–µ—É—á–µ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã (—É–ª. –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞, 1, –∫–∞–±. 107, —Ç–µ–ª.: 521-509).\n\n"
        "<b>–®–∞–≥ 4:</b> –° 26 –∞–≤–≥—É—Å—Ç–∞ –æ—Ñ–æ—Ä–º–∏—Ç—å –≤ –¥–µ–∫–∞–Ω–∞—Ç–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞/–∏–Ω—Å—Ç–∏—Ç—É—Ç–∞/–æ—Ç–¥–µ–ª–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä –Ω–∞–π–º–∞ –∂–∏–ª–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–∑—è—Ç—å –ø–∞—Å–ø–æ—Ä—Ç!\n\n"
        "<b>–®–∞–≥ 5:</b> –ü–æ—Å–ª–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ –Ω–∞–π–º–∞ –∂–∏–ª–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è –Ω—É–∂–Ω–æ –∑–∞—Å–µ–ª–∏—Ç—å—Å—è –≤ –æ–±—â–µ–∂–∏—Ç–∏–µ –∏ –ø—Ä–æ–π—Ç–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –æ—Å–º–æ—Ç—Ä. –ê–¥—Ä–µ—Å –æ–±—â–µ–∂–∏—Ç–∏—è —É—Ç–æ—á–Ω–∏—Ç–µ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –¥–æ–≥–æ–≤–æ—Ä–∞ –≤ –¥–µ–∫–∞–Ω–∞—Ç–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞/–∏–Ω—Å—Ç–∏—Ç—É—Ç–∞/–æ—Ç–¥–µ–ª–µ–Ω–∏—è –∏–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.\n\n"
        "<b>–í–∞–∂–Ω–æ!</b> –î–ª—è –∑–∞—Å–µ–ª–µ–Ω–∏—è –≤ –æ–±—â–µ–∂–∏—Ç–∏–µ –ø—Ä–∏ —Å–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å: –ø–∞—Å–ø–æ—Ä—Ç, –æ—Ä–∏–≥–∏–Ω–∞–ª —Å–ø—Ä–∞–≤–∫–∏ –æ —Ñ–ª—é–æ—Ä–æ–≥—Ä–∞—Ñ–∏–∏ –∏ 2 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ 3—Ö4. –ó–∞—Å–µ–ª–µ–Ω–∏–µ –≤ –æ–±—â–µ–∂–∏—Ç–∏–µ –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è —Å 26 –∞–≤–≥—É—Å—Ç–∞ –ø–æ 15 —Å–µ–Ω—Ç—è–±—Ä—è.\n\n"
        "–ê–¥—Ä–µ—Å –æ–±—â–µ–∂–∏—Ç–∏—è: –≥. –ò—Ä–∫—É—Ç—Å–∫, —É–ª. –£–ª–∞–Ω-–ë–∞—Ç–æ—Ä—Å–∫–∞—è, 6–∞, –æ–±—â. ‚Ññ 3"
    )

    bot.send_message(message.chat.id, response, parse_mode='HTML')


@bot.message_handler(func=lambda message: message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞ –∫–∞—Ä—Ç–µüó∫Ô∏è')
def show_coordinates(message):
    destination = "52.250204,104.263723"  # –ù–æ–≤—ã–µ –∑–∞–¥–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    lon = destination.split(',')[1]
    lat = destination.split(',')[0]

    # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
    yandex_maps_link = f"https://yandex.ru/maps/?pt={lon},{lat}&z=14"

    bot.send_message(
        message.chat.id,
        f"–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã {destination} –Ω–∞ –∫–∞—Ä—Ç–µ: {yandex_maps_link}"
    )

@bot.message_handler(content_types=['text'])
def findEmployee(message):
    if message.text == ">":
        pass
    else:
        con = psycopg2.connect(database='EmployeeDB', user='postgres', password='5055dom', host='localhost',
                               port='5432')
        cursor = con.cursor()

        message1 = message.text
        print(message1)
        likepattern = f"%{message1}%"

        cursor.execute("SELECT fio, job, email, phonenumber FROM employee WHERE job ILIKE %s", (likepattern,))

        container = cursor.fetchall()
        cursor.close()
        con.close()

        answer = ""
        for l in container:
            answer += f'–§–ò–û: {l[0]} \n –î–æ–ª–∂–Ω–æ—Å—Ç—å: {l[1]} \n –¢–µ–ª–µ—Ñ–æ–Ω:{l[3]} \n –ü–æ—á—Ç–∞:{l[2]}'
            if len(answer) > 0:
                bot.send_message(message.chat.id, text=answer)
                answer = ""

if __name__ == '__main__':
    bot.polling(non_stop=True)
